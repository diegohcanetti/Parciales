main :: IO a0

data Jugador = Jugador {
    nombreJugador :: String,
    nombrePadre :: String,
    habilidad :: Habilidad
} deriving (Eq,Show)

data Habilidad = Habilidad {
    fuerza :: Int,
    precisionHabilidad :: Int
} deriving (Eq,Show)

data Tiro = UnTiro {
  velocidad :: Int,
  precisionTiro :: Int,
  altura :: Int
} deriving (Eq, Show)

type Palo = Habilidad -> Tiro 

putter :: Palo
putter habilidad = UnTiro 10 (doblePrecision habilidad) 0

doblePrecision :: Habilidad -> Int
doblePrecision habilidad = precisionHabilidad habilidad * 2

madera :: Palo
madera habilidad = UnTiro 100 (divisionPrecision habilidad 2) 0

divisionPrecision habilidad numero = precisionHabilidad habilidad `div` numero

hierro :: Int -> Palo
hierro numero habilidad = UnTiro (fuerza habilidad * numero) (divisionPrecision habilidad numero) (max (numero-3) 0)

-- b. Definir una constante palos que sea una lista con todos los palos que se pueden usar en el juego --

palos :: [Palo]
palos = [putter , madera] ++ map hierro [1..10]

--golpe :: Jugador -> Palo 
--golpe jugador palo = habilidad jugador